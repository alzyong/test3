package Backend;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import javax.swing.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import GUI_V1.TransactionDetails;
import org.json.simple.parser.ParseException;

public class GoogleMap extends javax.swing.JFrame{
        public GoogleMap(String devID,String TranID) throws IOException, ParseException, InterruptedException {
            initComponents(devID,TranID);
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">
        private void initComponents(String devID,String TranID) throws IOException, ParseException, InterruptedException {

            String[] address = {"",""};
            try {
                ResultSet rs = DatabaseAccess.SpecificTransaction_display(TranID);
                System.out.println(TranID);
                while (rs.next()) {
                    address[0]=rs.getString(4);
                    address[1]=rs.getString(9);
                }
            }
            catch(SQLException ex){
                System.out.println("SQLException: " + ex.getMessage());
                System.out.println("SQLState: " + ex.getSQLState());
                System.out.println("VendorError: " + ex.getErrorCode());
            }
            System.out.println(address[1]);
            System.out.println(address[0]);
            String destination = GeocodingExample.Geocode(address[1]);
            String pickup = GeocodingExample.Geocode(address[0]);
            try {
                ArrayList<String> GPS = DatabaseAccess.CurrentGPS(devID);
                String CurrentLocat = GPS.get(0)+","+GPS.get(1);
                String CurrentLoca = CurrentLocat.replaceAll("\\s", "");
                String imageUrl = "https://maps.googleapis.com/maps/api/staticmap?size=1500x1500&maptype=roadmap&markers=color:blue%7Clabel:D%7C"+destination+"&markers=color:green%7Clabel:P%7C"+pickup+"&markers=color:red%7label:C%7C"+CurrentLoca+"&key=AIzaSyCw1wPkgtrszhohSGmDH-OSR-IDiFv6CrY";
                String destinationFile = "image.jpg";
                String str = destinationFile;
                URL url = new URL(imageUrl);
                InputStream is = url.openStream();
                OutputStream os = new FileOutputStream(destinationFile);

                byte[] b = new byte[2048];
                int length;

                while ((length = is.read(b)) != -1) {
                    os.write(b, 0, length);
                }

                is.close();
                os.close();
            } catch (IOException ef) {
                ef.printStackTrace();
                System.exit(1);
            }
            jPanel1 = new JPanel();
            jLabel1 = new JLabel();
            jButton1 = new JButton();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

            jLabel1.setIcon(new ImageIcon((new ImageIcon("image.jpg")).getImage().getScaledInstance(700, 600,
                    java.awt.Image.SCALE_SMOOTH)));

            jButton1.setText("Back");


            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                                    .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            jPanel1Layout.setVerticalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addContainerGap())
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))
            );

            pack();
            Timer t = new Timer(4000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    try {
                        ArrayList<String> GPS = DatabaseAccess.CurrentGPS(devID);
                        String CurrentLocat2 = GPS.get(0)+","+GPS.get(1);
                        String CurrentLoca2 = CurrentLocat2.replaceAll("\\s", "");
                        System.out.println(CurrentLoca2);
                        String imageUrl = "https://maps.googleapis.com/maps/api/staticmap?size=1500x1500&maptype=roadmap&markers=color:blue%7Clabel:D%7C"+destination+"&markers=color:green%7Clabel:P%7C"+pickup+"&markers=color:red%7Clabel:C%7C"+CurrentLoca2+"&key=AIzaSyCw1wPkgtrszhohSGmDH-OSR-IDiFv6CrY";
                        String destinationFile = "image.jpg";
                        URL url = new URL(imageUrl);
                        InputStream is = url.openStream();
                        OutputStream os = new FileOutputStream(destinationFile);

                        byte[] b = new byte[2048];
                        int length;

                        while ((length = is.read(b)) != -1) {
                            os.write(b, 0, length);
                        }

                        is.close();
                        os.close();
                    } catch (IOException ef) {
                        ef.printStackTrace();
                        System.exit(1);
                    }
                    jLabel1.setIcon(new ImageIcon((new ImageIcon("image.jpg")).getImage().getScaledInstance(700, 600,
                            java.awt.Image.SCALE_SMOOTH)));
                }
            });
            t.start();
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt,TranID,t);
                }
            });

        }// </editor-fold>

        private void jButton1ActionPerformed(java.awt.event.ActionEvent evt,String TranID,Timer t) {
            TransactionDetails mt = new TransactionDetails(TranID);
            mt.setVisible(true);
            JFrame frame = new JFrame();
            frame.setVisible(false);
            t.stop();
            dispose();
        }

        /**
         * @param args the command line arguments
         */



        // Variables declaration - do not modify
        private javax.swing.JButton jButton1;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JLabel jLabel1;
        // End of variables declaration
    }






